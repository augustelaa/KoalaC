package Compiladores_Backend;
public interface ParserConstants
{
    int START_SYMBOL = 43;

    int FIRST_NON_TERMINAL    = 43;
    int FIRST_SEMANTIC_ACTION = 90;

    int[][] PARSER_TABLE =
    {
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  0, -1, -1, -1, -1,  0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  2, -1, -1, -1, -1,  1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1,  3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1,  5, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1,  6,  6,  6,  6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1,  9, 10, 11, 12, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1,  8, -1, -1, -1,  7, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 14, 14, 14, 14, 14, -1, -1, -1, 14, -1, -1, -1, 14, 14, -1, -1, -1, 14, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 15, 15, 15, 15, 15, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 18, 18, 18, 18, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 17, -1, 16, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 20, 20, 20, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 21, -1, 21, 22, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, 23, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, 24, 25, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 26, 26, 26, 26, 26, -1, -1, -1, 26, -1, -1, -1, 26, 26, -1, -1, -1, 26, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 29, 29, 29, 29, 29, -1, -1, -1, 30, -1, -1, -1, 31, 32, -1, -1, -1, 33, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 28, 28, 28, 28, 28, -1, -1, -1, 28, -1, -1, -1, 28, 28, -1, -1, -1, 28, -1, -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 55, 55, 55, 55, 55, 55, 55, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 55, -1, 55, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 54, -1, 54, -1, 54, -1, 54, 52, 53, -1, -1, -1, 54, 54, 54, 54, 54, 54, -1, 54, 54 },
        { -1, -1, 59, 59, 59, 59, 59, 60, 61, 62, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 63, -1, 64, 65, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, -1, 58, -1, 58, -1, 58, 58, 58, 56, 57, -1, 58, 58, 58, 58, 58, 58, -1, 58, 58 },
        { -1, -1, 42, 42, 42, 42, 42, 42, 42, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 42, -1, 42, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 51, 51, 51, 51, 51, 51, 51, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 51, -1, 51, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 44, -1, 44, -1, 44, -1, 44, -1, -1, -1, -1, -1, 43, 43, 43, 43, 43, 43, -1, 44, 44 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 46, 47, 48, 49, 50, -1, -1, -1 },
        { -1, -1, 34, 34, 34, 34, 34, 34, 34, 34, -1, -1, -1, -1, -1, -1, 34, 34, -1, -1, -1, -1, -1, -1, -1, -1, 34, -1, 34, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, 34, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, 37, -1, 37, -1, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 35, 36 },
        { -1, -1, 38, 38, 38, 38, 38, 38, 38, 38, -1, -1, -1, -1, -1, -1, 39, 40, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, 38, 38, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 66, 66, 66, 66, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 67, 67, 67, 67, 67, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 81, -1, -1, -1, -1, -1, 80, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 73, 74, 75, 76, 77, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 69, 70, -1, 70, 68, 70, -1, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, 70, -1, 70, 70 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 71, 72, -1, 72, -1, 72, -1, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, 72, -1, 72, 72 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 78, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 79, 79, 79, 79, 79, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 82, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, 83, 83, 83, 83, 83, 83, 83, 83, -1, -1, -1, -1, -1, -1, 83, 83, -1, -1, -1, -1, -1, -1, -1, -1, 83, -1, 83, 83, -1, -1, -1, -1, -1, -1, -1, -1, -1, 83, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 85, -1, -1, -1, -1, -1, 84, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 86, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 88, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 87, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 89, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 },
        { -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 91, 90, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1 }
    };

    int[][] PRODUCTIONS = 
    {
        { 44, 14, 25, 50, 58, 26 },
        { 19, 25, 45, 26 },
        {  0 },
        {  7, 23, 25, 47, 26, 24, 46 },
        {  0 },
        { 45 },
        { 48, 49 },
        {  0 },
        { 22, 47 },
        {  3 },
        {  4 },
        {  5 },
        {  6 },
        { 23, 51, 24 },
        {  0 },
        { 52, 53 },
        {  0 },
        { 22, 51 },
        { 54 },
        { 56 },
        { 48, 55 },
        {  0 },
        { 25,  8, 26 },
        {  7, 25, 57 },
        {  7, 26 },
        {  8, 22,  7, 26 },
        { 59, 24, 60 },
        {  0 },
        { 58 },
        { 75 },
        { 81 },
        { 83 },
        { 86 },
        { 88 },
        { 73, 72 },
        { 41, 73, 72 },
        { 42, 73, 72 },
        {  0 },
        { 67 },
        { 17 },
        { 18 },
        { 40, 73 },
        { 68, 69 },
        { 70, 68 },
        {  0 },
        { 34 },
        { 35 },
        { 36 },
        { 37 },
        { 38 },
        { 39 },
        { 61, 63 },
        { 29, 61, 63 },
        { 30, 61, 63 },
        {  0 },
        { 64, 66 },
        { 31, 64, 66 },
        { 32, 64, 66 },
        {  0 },
        { 76 },
        {  8 },
        {  9 },
        { 10 },
        { 27, 71, 28 },
        { 29, 64 },
        { 30, 64 },
        { 76, 33, 71 },
        { 78, 79 },
        { 25, 71, 26, 80 },
        { 21, 48 },
        {  0 },
        { 21, 48 },
        {  0 },
        {  3 },
        {  4 },
        {  5 },
        {  6 },
        {  7 },
        { 11, 27, 82, 28 },
        { 76, 77 },
        {  0 },
        { 22, 82 },
        { 15, 27, 84, 28 },
        { 71, 85 },
        {  0 },
        { 22, 84 },
        { 16, 27, 71, 28, 13, 25, 58, 26, 87 },
        {  0 },
        { 12, 25, 58, 26 },
        { 20, 27, 71, 28, 89 },
        { 13, 25, 58, 26 },
        { 12, 25, 58, 26 }
    };

    String[] PARSER_ERROR =
    {
        "",
        "Era esperado fim de programa",
        "Era esperado palavra",
        "Era esperado identificadorInt",
        "Era esperado identificadorFloat",
        "Era esperado identificadorString",
        "Era esperado identificadorBool",
        "Era esperado identificadorComposto",
        "Era esperado constanteInt",
        "Era esperado constanteFloat",
        "Era esperado constanteString",
        "Era esperado input",
        "Era esperado isfalsedo",
        "Era esperado istruedo",
        "Era esperado main",
        "Era esperado output",
        "Era esperado if",
        "Era esperado true",
        "Era esperado false",
        "Era esperado types",
        "Era esperado while",
        "Era esperado \".\"",
        "Era esperado \",\"",
        "Era esperado \":\"",
        "Era esperado \";\"",
        "Era esperado \"[\"",
        "Era esperado \"]\"",
        "Era esperado \"(\"",
        "Era esperado \")\"",
        "Era esperado \"+\"",
        "Era esperado \"-\"",
        "Era esperado \"*\"",
        "Era esperado \"/\"",
        "Era esperado \"=\"",
        "Era esperado \"==\"",
        "Era esperado \"!=\"",
        "Era esperado \"<\"",
        "Era esperado \"<=\"",
        "Era esperado \">\"",
        "Era esperado \">=\"",
        "Era esperado \"!\"",
        "Era esperado \"&&\"",
        "Era esperado \"||\"",
        "<programa> inv�lido",
        "<tipos> inv�lido",
        "<rpt_tipos> inv�lido",
        "<rpt_tipos1> inv�lido",
        "<lista_de_campos> inv�lido",
        "<campo> inv�lido",
        "<campo1> inv�lido",
        "<variaveis> inv�lido",
        "<rpt_variaveis> inv�lido",
        "<variavel_dec> inv�lido",
        "<variavel_dec1> inv�lido",
        "<id_de_tipo_simples> inv�lido",
        "<campo2> inv�lido",
        "<id_de_tipo_composto> inv�lido",
        "<id_de_tipo_composto1> inv�lido",
        "<rpt_cmd> inv�lido",
        "<comando> inv�lido",
        "<comando1> inv�lido",
        "<termo> inv�lido",
        "<termo01> inv�lido",
        "<aritmetica1> inv�lido",
        "<fator> inv�lido",
        "<fator1> inv�lido",
        "<termo1> inv�lido",
        "<relacional> inv�lido",
        "<aritmetica> inv�lido",
        "<aritmetica01> inv�lido",
        "<operador_relacional> inv�lido",
        "<expressao> inv�lido",
        "<expressao1> inv�lido",
        "<elemento> inv�lido",
        "<elemento1> inv�lido",
        "<cdm_atribuicao> inv�lido",
        "<variavel_uso> inv�lido",
        "<variavel_uso1> inv�lido",
        "<identificador> inv�lido",
        "<identificador1> inv�lido",
        "<identificador2> inv�lido",
        "<cdm_entrada> inv�lido",
        "<lista_de_identificadores> inv�lido",
        "<cdm_saida> inv�lido",
        "<lista_de_expressoes> inv�lido",
        "<expressao2> inv�lido",
        "<cdm_selecao> inv�lido",
        "<cdm_selecao1> inv�lido",
        "<cdm_repeticao> inv�lido",
        "<cdm_repeticao1> inv�lido"
    };
}
